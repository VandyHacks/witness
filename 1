drop 72b4bf8 Redo table on frontend to display judging schedule
drop 4717454 Fixed styling stuff
pick af6365e close application (#315)
pick f9f90a2 clean code to move background logic to hackerdash
pick 1a7a224 add logic for background image
pick d9ecc0d add styling for team management
pick f9704fb fix styling and add logout button
pick 713aad5 replace banner png, fix padding on judges, fix logout button for judges, fix styling
pick 3b2bdfa revert commit & re-open application (#317)
pick 2c87a74 Events (#314)
pick ced78bc More status
pick a41a515 [hotfix] render stuff for checked_in status (#318)
pick 14e7080 Enable team management for when hacking starts
pick 106fe9b Revert "Merge branch 'main' into hacking-start"

# Rebase 66496f9..106fe9b onto 66496f9 (14 commands)
#
# Commands:
# p, pick <commit> = use commit
# r, reword <commit> = use commit, but edit the commit message
# e, edit <commit> = use commit, but stop for amending
# s, squash <commit> = use commit, but meld into previous commit
# f, fixup [-C | -c] <commit> = like "squash" but keep only the previous
#                    commit's log message, unless -C is used, in which case
#                    keep only this commit's message; -c is same as -C but
#                    opens the editor
# x, exec <command> = run command (the rest of the line) using shell
# b, break = stop here (continue rebase later with 'git rebase --continue')
# d, drop <commit> = remove commit
# l, label <label> = label current HEAD with a name
# t, reset <label> = reset HEAD to a label
# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]
# .       create a merge commit using the original merge commit's
# .       message (or the oneline, if no original merge commit was
# .       specified); use -c <commit> to reword the commit message
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
